@if (mydata.Count() == 0)
{
	<p>No games data!</p>
}
else
{
	<div class="table-responsive">
		<table class="table table-bordered">
			<thead>
				<tr>
                    <th><DisplayName For="@(() => mydata[0].GameId)" IsLabel="false" /></th>
                    <th><DisplayName For="@(() => mydata[0].Title)" IsLabel="false" /></th>
                    <th><DisplayName For="@(() => mydata[0].DescT)" IsLabel="false" /></th>
                    <th><DisplayName For="@(() => mydata[0].Cover)" IsLabel="false" /></th>
                    <th><DisplayName For="@(() => mydata[0].Category)" IsLabel="false" /></th>
                    <th><DisplayName For="@(() => mydata[0].Company)" IsLabel="false" /></th>
                    <th><DisplayName For="@(() => mydata[0].Publisher)" IsLabel="false" /></th>
                    <th><DisplayName For="@(() => mydata[0].Genre)" IsLabel="false" /></th>
                    <th><DisplayName For="@(() => mydata[0].DateRelease)" IsLabel="false" /></th>
                    <th><DisplayName For="@(() => mydata[0].LangT)" IsLabel="false" /></th>
                    <th><DisplayName For="@(() => mydata[0].Rating)" IsLabel="false" /></th>
                    <th class="@(isUserLoggedIn ? "show": "hidden")"></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var mdata in mydata)
				{
					<tr>
						<td>@mdata.GameId</td>
						<td>@mdata.Title</td>
						<td>@mdata.DescT</td>
						<td>@mdata.Cover</td>
						<td>@mdata.Category</td>
						<td>@mdata.Company</td>
						<td>@mdata.Publisher</td>
						<td>@mdata.Genre</td>
						<td>@mdata.DateRelease</td>
						<td>@mdata.LangT</td>
						<td>@mdata.Rating</td>
						<td class="@(isUserLoggedIn ? "show": "hidden")">
							<a href="/games/edit/@mdata.GameId" class="btn btn-primary" title="Edit">
								<i class="bi bi-pencil"></i>
								Edit
							</a>
							<a href="/games/delete/@mdata.GameId" class="btn btn-danger" title="Delete">
								<i class="bi bi-trash"></i>
								Delete
							</a>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

@code {
	[Parameter]
	public List<lib.Models.Games> mydata { get; set; }

	[Parameter]
	public int? mydataid { get; set; }

    [Parameter]
    public bool isUserLoggedIn { get; set; } = false;

	protected override Task OnInitializedAsync()
	{
		if(mydataid != null)
		{
			mydata = mydata.Where(x => x.GameId == mydataid).ToList();
		}

		return base.OnInitializedAsync();
	}
}
